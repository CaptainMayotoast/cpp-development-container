FROM gcc:13.1

ENV DEBIAN_FRONTEND noninteractive

COPY --from=cmake:latest /opt/cmake /opt/cmake
RUN chmod +x /opt/cmake/bin/cmake
# update path with cmake binary location
ENV PATH="${PATH}:/opt/cmake/bin"

# copy over Intel libraries (TBB, MKL) artefacts
COPY --from=intel-tbb:latest /opt/intel/oneapi/ /opt/intel/oneapi/
COPY --from=intel-mkl:latest /opt/intel/oneapi/ /opt/intel/oneapi/

# CUDA
COPY --from=nvidia/cuda:12.1.0-devel-ubuntu22.04 /usr/local/cuda/* /usr/local/cuda/

# Boost
COPY --from=boost:latest /opt/boost/include/* /usr/include/boost/
COPY --from=boost:latest /opt/boost/lib/* /usr/lib/x86_64-linux-gnu/

# Debian backports to get pipx
RUN echo "deb http://deb.debian.org/debian bookworm-backports main contrib non-free" >> /etc/apt/sources.list && \
    echo "deb-src http://deb.debian.org/debian bookworm-backports main contrib non-free" >> /etc/apt/sources.list && \
    apt update -y

# as of image gcc:12.1, Python3.9 is in use, which is sufficient for the use case here
# install ninja and meson from PyPi
RUN apt-get clean && apt-get update -y && \
    apt-get install --no-install-recommends -y  curl \
    git \
    wget \
    libglfw3 \
    libglfw3-dev \
    freeglut3-dev \
    mesa-utils \
    pipx \
    pkg-config \
    python3-dev \
    python3.11-dev

COPY ./build.sh /
RUN chmod +x /build.sh && \
    mkdir build && chmod u+x ./build.sh

# pipx nonsense for root :100:
RUN pipx ensurepath && \ 
    pipx install ninja==1.11.1 && \
    pipx install meson==1.1.1 && \
    pipx install gcovr==5.2 && \
    chmod -R 757 /usr/local/bin

ENTRYPOINT ["/build.sh"]