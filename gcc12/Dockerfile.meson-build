FROM gcc:12.2

ENV DEBIAN_FRONTEND noninteractive

# install CMake for building 3rd party libraries
COPY --from=cmake:latest /opt/cmake /opt/cmake
RUN chmod +x /opt/cmake/bin/cmake
# update path with cmake binary location
ENV PATH="${PATH}:/opt/cmake/bin"

# copy over Intel libraries (TBB, MKL) artefacts
COPY --from=intel-tbb:latest /opt/intel/oneapi/ /opt/intel/oneapi/
COPY --from=intel-mkl:latest /opt/intel/oneapi/ /opt/intel/oneapi/

# CUDA (https://hub.docker.com/r/nvidia/cuda/tags?page=1&name=ubuntu)
COPY --from=nvidia/cuda:12.3.1-devel-ubuntu22.04 /usr/local/cuda-12.3/ /usr/local/cuda-12.3/

# Boost
COPY --from=boost:latest /opt/boost/include/* /usr/include/boost/
COPY --from=boost:latest /opt/boost/lib/* /usr/lib/x86_64-linux-gnu/

# Debian backports to get pipx
RUN echo "deb http://deb.debian.org/debian bookworm-backports main contrib non-free" >> /etc/apt/sources.list && \
    echo "deb-src http://deb.debian.org/debian bookworm-backports main contrib non-free" >> /etc/apt/sources.list && \
    apt update -y

RUN apt-get clean && apt-get update -y && \
    apt-get install --no-install-recommends -y curl \
    gdb \
    git \
    wget \
    libglfw3 \
    libglfw3-dev \
    freeglut3-dev \
    mesa-utils \
    # pipx \
    pkg-config \
    python3-dev \
    # python3.11-dev \
    python3.9-dev \
    libaspell-dev \
    clang-format && \
    curl -fsSL https://deb.nodesource.com/setup_21.x | bash - && \
    apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

# python3.11-dev

# pipx configuration for any user
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python3 && \
    python3.9 -m pip install pipx && \
    export PIPX_BIN_DIR=/usr/local/bin && \
    apt-get update -y && apt install -y python3.9-venv && \
    mkdir -m 755 -p /usr/local/pipx && \
    export PIPX_HOME=/usr/local/pipx && \
    export PIPX_MAN_DIR=/usr/local/share/man/ && \
    /usr/local/bin/pipx ensurepath && \ 
    /usr/local/bin/pipx install conan==1.62.0 && \
    /usr/local/bin/pipx install gcovr==6.0 && \
    /usr/local/bin/pipx install meson==1.3.1 && \
    /usr/local/bin/pipx install ninja==1.11.1.1 && \
    chmod -R 755 /usr/local/bin

COPY ./build.sh /
RUN chmod +x /build.sh && \
    mkdir build && chmod u+x ./build.sh

# for CUDA, necessary for Meson
ENV PATH=/usr/local/cuda-12.3/bin:$PATH
ENV CUDA_PATH=/usr/local/cuda-12.3/

ENTRYPOINT ["/build.sh"]